{"ts":1351736504468,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import java.util.Scanner;\n\npublic class ClockTest {\n    public static void main(String[] args) {\n    \tSystem.out.print(\"Enter command: \");\n\t\tScanner s = new Scanner(System.in);\n\n\t\tStatsPack stat = new StatsPack();\n\t\twhile (s.hasNextLine()) {\n\t\t\tString str = s.nextLine();\n\n\t\t\tScanner scanString = new Scanner(str);\n\t\t\tString command = scanString.next();\n\n\t\t\tif (command.equals(\"add\")) {\n\t\t\t\twhile (scanString.hasNextLine()) {\n\t\t\t\t\tif (!scanString.hasNextInt()) {\n\t\t\t\t\t\tSystem.out.println(\"WARNING - an invalid entry was made in 'add' command.\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint inVal = scanString.nextInt();\n\t\t\t\t\tstat.addValue(inVal);\n\t\t\t\t}\n\t\t\t} else if (command.equals(\"num\")) System.out.println(stat.numVals());\n\t\t\telse if (command.equals(\"tot\")) System.out.println(stat.total());\n\t\t\telse if (command.equals(\"avg\")) System.out.println(stat.average());\n\t\t\telse if (command.equals(\"low\")) System.out.println(stat.lowest());\n\t\t\telse if (command.equals(\"high\")) System.out.println(stat.highest());\n\t\t\telse if (command.equals(\"pos\")) System.out.println(stat.numPositive());\n\t\t\telse if (command.equals(\"neg\")) System.out.println(stat.numNegative());\n\t\t\telse if (command.equals(\"zero\")) System.out.println(stat.numZero());\n\t\t\telse if (command.equals(\"reset\")) stat.reset();\n\t\t\telse if (command.equals(\"exit\")) break;\n\t\t\telse System.out.println(\"Invalid command\");\n\n\t\t\tSystem.out.print(\"Enter command: \");\n\t\t}\t\t\n\t}\n}"]],"start1":0,"start2":0,"length1":0,"length2":1407}]],"length":1407}
{"contributors":[],"silentsave":false,"ts":1352015759467,"patch":[[{"diffs":[[0,"Scanner;"],[-1,"\n"],[1,"\r\n\r"],[0,"\npublic "]],"start1":17,"start2":17,"length1":17,"length2":19},{"diffs":[[0,"ckTest {"],[1,"\r"],[0,"\n    pub"]],"start1":45,"start2":45,"length1":16,"length2":17},{"diffs":[[0,"s) {"],[-1,"\n    \tSystem.out.print(\"Enter command: \");\n\t\tScanner s = new Scanner(System.in);\n\n\t\tStatsPack stat = new StatsPack("],[1,"\r\n//\t\tClock c = new Clock(23, 30, 30"],[0,");"],[1,"\r"],[0,"\n\t\t"],[-1,"while (s.hasNextLine()) {\n\t\t\tString str = s.nextLine();\n\n\t\t\tScanner scanString = new Scanner(str);\n\t\t\tString command = scanString.next();\n\n\t\t\tif (command.equals(\"add\")) {\n\t\t\t\twhile (scanString.hasNextLine()) {\n\t\t\t\t\tif (!scanString.hasNextInt()) {\n\t\t\t\t\t\tSystem.out.println(\"WARNING - an invalid entry was made in 'add' command.\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint inVal = scanString.nextInt();\n\t\t\t\t\tstat.addValue(inVal);\n\t\t\t\t}\n\t\t\t} else if (command.equals(\"num\")) System.out.println(stat.numVals());\n\t\t\telse if (command.equals(\"tot\")) System.out.println(stat.total());\n\t\t\telse if (command.equals(\"avg\")) System.out.println(stat.average"],[1,"Clock c = new Clock(12, 59, 59, false);\r\n\t\tc.set(23, 59, 59);\r\n//\t\tc.addSeconds(30);\r\n//\t\tc.addMinutes(50);\r\n//\t\tc.addHours(3);\r\n\r\n//\t\tSystem.out.println(c.getHours12"],[0,"());"],[1,"\r"],[0,"\n\t\t"],[-1,"\telse if (command.equals(\"low\")) System.out.println(stat.lowest());\n\t\t\telse if (command.equals(\"high\")) System.out.println(stat.highest());\n\t\t\telse if (command.equals(\"pos\")) System.out.println(stat.numPositive());\n\t\t\telse if (command.equals(\"neg\")) System.out.println(stat.numNegative"],[1,"System.out.println(c.getHours24());\r\n\t\tSystem.out.println(c.getMinutes"],[0,"());"],[1,"\r"],[0,"\n\t\t"],[-1,"\telse if (command.equals(\"zero\")) System.out.println(stat.numZero());\n\t\t\telse if (command.equals(\"reset\")) stat.reset();\n\t\t\telse if (command.equals(\"exit\")) break;\n\t\t\telse System.out.println(\"Invalid command\");\n\n\t\t\tSystem.out.print(\"Enter command: \");\n\t\t}\t\t"],[1,"System.out.println(c.getSeconds());\r\n\t\tSystem.out.println(c.isPM());\r"],[0,"\n\t}"],[1,"\r"],[0,"\n}"]],"start1":95,"start2":95,"length1":1315,"length2":373}]],"length":468,"saved":false}
{"ts":1352020983722,"patch":[[{"diffs":[[0," {\r\n"],[-1,"//"],[0,"\t\tClock "],[-1,"c"],[1,"b"],[0," = n"]],"start1":97,"start2":97,"length1":19,"length2":17},{"diffs":[[0,"w Clock("],[-1,"23"],[1,"11"],[0,", 30, 30"]],"start1":115,"start2":115,"length1":18,"length2":18},{"diffs":[[0,"ck(1"],[-1,"2, 59, 59"],[1,"1, 30, 30"],[0,", fa"]],"start1":156,"start2":156,"length1":17,"length2":17},{"diffs":[[0,");\r\n"],[1,"//"],[0,"\t\tc."],[-1,"set(23, 59, 59);\r\n//\t\tc.addSeconds(30);\r\n//\t\tc"],[1,"addSeconds(30);\r\n//\t\tc.addSeconds(30);\r\n//\t\tb.addSeconds(30);\r\n//\t\tb.addSeconds(30);\r\n//\t\tc.addMinutes(50);\r\n//\t\tc.addMinutes(50);\r\n//\t\tb.addMinutes(50);\r\n//\t\tb"],[0,".add"]],"start1":176,"start2":176,"length1":58,"length2":174},{"diffs":[[0,"urs("],[1,"1"],[0,"3);\r\n"],[-1,"\r\n"],[0,"//"],[1,"\t\tc.addHours(13);\r\n//\t\tb.addHours(13);\r\n//\t\tb.addHours(13);\r\n//\t\tc.set(1, 59, 59);\r\n//\t\tb.set(1, 59, 59);\r\n\r\n\t\tSystem.out.println(b);\r\n\t\tSystem.out.println(c);\r\n\t\tSystem.out.println(c.equals(b));\r\n/*"],[0,"\t\tSy"]],"start1":375,"start2":375,"length1":17,"length2":215},{"diffs":[[0,"PM());\r\n"],[1,"*/"],[0,"\t}\r\n}"]],"start1":767,"start2":767,"length1":13,"length2":15}]],"length":782,"saved":false}
