{"ts":1350981203895,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import java.util.Scanner;\n\npublic class StatsPackTest {\n    public static void main(String[] args) {\n\t\tSystem.out.print(\"Enter command: \");\n\t\tScanner s = new Scanner(System.in);\n\n\t\tStatsPack stat = new StatsPack();\n\t\twhile (s.hasNextLine()) {\n\t\t\tString str = s.nextLine();\n\t\t\t\n\t\t\tScanner scanString = new Scanner(str);\n\t\t\tString command = scanString.next();\n\t\t\t\n\t\t\tif (command.equals(\"add\")) {\n\t\t\t\twhile (scanString.hasNextLine()) {\n\t\t\t\t\tint inVal = scanString.nextInt();\n\t\t\t\t\tstat.addValue(inVal);\n\t\t\t\t}\n\t\t\t} else if (command.equals(\"num\")) System.out.println(stat.numVals());\n\t\t\telse if (command.equals(\"tot\")) System.out.println(stat.total());\n\t\t\telse if (command.equals(\"avg\")) System.out.println(stat.average());\n\t\t\telse if (command.equals(\"low\")) System.out.println(stat.lowest());\n\t\t\telse if (command.equals(\"high\")) System.out.println(stat.highest());\n\t\t\telse if (command.equals(\"pos\")) System.out.println(stat.numPositive());\n\t\t\telse if (command.equals(\"neg\")) System.out.println(stat.numNegative());\n\t\t\telse if (command.equals(\"zero\")) System.out.println(stat.numZero());\n\t\t\telse if (command.equals(\"reset\")) stat.reset();\n\t\t\telse if (command.equals(\"exit\")) break;\n\t\t\telse System.out.println(\"Invalid command\");\n\t\t\t\n\t\t\tSystem.out.print(\"Enter command: \");\n\t\t}\n\t}\n}"]],"start1":0,"start2":0,"length1":0,"length2":1275}]],"length":1275}
{"contributors":[],"silentsave":false,"ts":1350981203839,"patch":[[{"diffs":[[1,"import java.util.Scanner;\n\npublic class StatsPackTest {\n    public static void main(String[] args) {\n\t\tSystem.out.print(\"Enter command: \");\n\t\tScanner s = new Scanner(System.in);\n\n\t\tStatsPack stat = new StatsPack();\n\t\twhile (s.hasNextLine()) {\n\t\t\tString str = s.nextLine();\n\t\t\t\n\t\t\tScanner scanString = new Scanner(str);\n\t\t\tString command = scanString.next();\n\t\t\t\n\t\t\tif (command.equals(\"add\")) {\n\t\t\t\twhile (scanString.hasNextLine()) {\n\t\t\t\t\tint inVal = scanString.nextInt();\n\t\t\t\t\tstat.addValue(inVal);\n\t\t\t\t}\n\t\t\t} else if (command.equals(\"num\")) System.out.println(stat.numVals());\n\t\t\telse if (command.equals(\"tot\")) System.out.println(stat.total());\n\t\t\telse if (command.equals(\"avg\")) System.out.println(stat.average());\n\t\t\telse if (command.equals(\"low\")) System.out.println(stat.lowest());\n\t\t\telse if (command.equals(\"high\")) System.out.println(stat.highest());\n\t\t\telse if (command.equals(\"pos\")) System.out.println(stat.numPositive());\n\t\t\telse if (command.equals(\"neg\")) System.out.println(stat.numNegative());\n\t\t\telse if (command.equals(\"zero\")) System.out.println(stat.numZero());\n\t\t\telse if (command.equals(\"reset\")) stat.reset();\n\t\t\telse if (command.equals(\"exit\")) break;\n\t\t\telse System.out.println(\"Invalid command\");\n\t\t\t\n\t\t\tSystem.out.print(\"Enter command: \");\n\t\t}\n\t}\n}"]],"start1":0,"start2":0,"length1":0,"length2":1275}]],"length":1275,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351023023590,"patch":[[{"diffs":[[0,"\t}\n}"],[-1,"import java.util.Scanner;\n\npublic class StatsPackTest {\n    public static void main(String[] args) {\n\t\tSystem.out.print(\"Enter command: \");\n\t\tScanner s = new Scanner(System.in);\n\n\t\tStatsPack stat = new StatsPack();\n\t\twhile (s.hasNextLine()) {\n\t\t\tString str = s.nextLine();\n\t\t\t\n\t\t\tScanner scanString = new Scanner(str);\n\t\t\tString command = scanString.next();\n\t\t\t\n\t\t\tif (command.equals(\"add\")) {\n\t\t\t\twhile (scanString.hasNextLine()) {\n\t\t\t\t\tint inVal = scanString.nextInt();\n\t\t\t\t\tstat.addValue(inVal);\n\t\t\t\t}\n\t\t\t} else if (command.equals(\"num\")) System.out.println(stat.numVals());\n\t\t\telse if (command.equals(\"tot\")) System.out.println(stat.total());\n\t\t\telse if (command.equals(\"avg\")) System.out.println(stat.average());\n\t\t\telse if (command.equals(\"low\")) System.out.println(stat.lowest());\n\t\t\telse if (command.equals(\"high\")) System.out.println(stat.highest());\n\t\t\telse if (command.equals(\"pos\")) System.out.println(stat.numPositive());\n\t\t\telse if (command.equals(\"neg\")) System.out.println(stat.numNegative());\n\t\t\telse if (command.equals(\"zero\")) System.out.println(stat.numZero());\n\t\t\telse if (command.equals(\"reset\")) stat.reset();\n\t\t\telse if (command.equals(\"exit\")) break;\n\t\t\telse System.out.println(\"Invalid command\");\n\t\t\t\n\t\t\tSystem.out.print(\"Enter command: \");\n\t\t}\n\t}\n}"]],"start1":1271,"start2":1271,"length1":1279,"length2":4}]],"length":1275,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351150192813,"patch":[[{"diffs":[[0,"args) {\n"],[-1,"\t"],[1,"    "],[0,"\tSystem."]],"start1":93,"start2":93,"length1":17,"length2":20},{"diffs":[[0,"Line();\n"],[-1,"\t\t\t"],[0,"\n"],[1,""],[0,"\t\t\tScann"]],"start1":268,"start2":268,"length1":20,"length2":17},{"diffs":[[0,"next();\n"],[-1,"\t\t\t"],[0,"\n"],[1,""],[0,"\t\t\tif (c"]],"start1":350,"start2":350,"length1":20,"length2":17},{"diffs":[[0,"s(\"add\")) {\n"],[-1,""],[0,"\t\t\t\twhile (s"]],"start1":379,"start2":379,"length1":24,"length2":24},{"diffs":[[0,"xtLine()) {\n"],[1,"\t\t\t\t\tif (!scanString.hasNextInt()) {\n\t\t\t\t\t\tSystem.out.println(\"WARNING - an invalid entry was made in 'add' command.\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n"],[0,"\t\t\t\t\tint inV"]],"start1":418,"start2":418,"length1":24,"length2":164},{"diffs":[[0,"mand\");\n"],[-1,"\t\t\t"],[0,"\n\t\t\tSyst"]],"start1":1352,"start2":1352,"length1":19,"length2":16}]],"length":1409,"saved":false}
